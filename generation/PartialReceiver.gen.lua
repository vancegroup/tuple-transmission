return {
	outFile = "PartialReceiver.h";
	baseIndent = 3;
	minArity = 0;
	maxArity = 9;

	generate = function(arity)
		-- Message type "tag" argument
		local argumentTypes = {"typename M"}
		local arguments = { "M const &" }

		-- Tuple values
		if arity > 0 then
			table.insert(argumentTypes, genRange(arity, function(i) return ("typename T%d"):format(i) end, ", "))
			table.insert(arguments, genRange(arity, function(i) return ("T%d"):format(i) end, ", "))
		end

		-- SFINAE test to ensure the first argument is actually a message type.
		table.insert(arguments, "typename M::message_type_tag * = NULL")

		out(("template<%s>"):format(cat(argumentTypes, ", ")))
		out(("void operator()(%s) {}\n"):format(cat(arguments, ", ")))
	end;

	prefix = [[
/** @file
	@brief Header AUTO-GENERATED by %s to avoid doing crazy preprocessor things

	DO NOT EDIT THIS FILE DIRECTLY - instead, edit the script that generates it.

	@date 2012

	@author
	Ryan Pavlik
	<rpavlik@iastate.edu> and <abiryan@ryand.net>
	http://academic.cleardefinition.com/
	Iowa State University Virtual Reality Applications Center
	Human-Computer Interaction Graduate Program
*/

//          Copyright Iowa State University 2012.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

#pragma once
#ifndef INCLUDED_PartialReceiver_h_GUID_314b3576_c339_42e9_ac75_cccb9b7f0bfe
#define INCLUDED_PartialReceiver_h_GUID_314b3576_c339_42e9_ac75_cccb9b7f0bfe

// Internal Includes
#include "Receiver.h"

// Library/third-party includes
// - none

// Standard includes
// - none

namespace transmission {

	/** @brief Variant of transmission::Receiver that provides default handlers
		for all message types.

		Works the same as Receiver, except you don't have to provide all
		the handlers, and you must include a line like the following in the
		class (here, "MyReceiver") to explicitly use the provided defaults:

		using transmission::PartialReceiver<MyReceiver, MyMessageCollection>::operator();
	*/
	template<typename Derived, typename MessageCollection>
	class PartialReceiver : public Receiver<Derived, MessageCollection> {
		public:
]];

	suffix = [[
	};
} // end of namespace transmission

#endif // INCLUDED_PartialReceiver_h_GUID_314b3576_c339_42e9_ac75_cccb9b7f0bfe
]];
}
